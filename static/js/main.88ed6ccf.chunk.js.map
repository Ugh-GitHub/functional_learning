{"version":3,"sources":["Components/App/App.js","serviceWorker.js","Components/GridItem/GridItem.js","Components/GridLayout/GridLayout.js","Components/ButtonGrid/ButtonGrid.js","Components/Modal/Modal.js","Components/Portfolio/Portfolio.js","Components/Resume/Resume.js","Components/ToolTip/ToolTip.js","Components/ToolTip/ToolTipRight.js","Components/GithubRow/GithubRow.js","Components/GithubColumn/GithubColumn.js","Components/GithubData/GithubData.js","Components/Home/Home.js","index.js"],"names":["App","useState","showBasic","setShowBasic","currentYear","Date","getFullYear","className","expand","light","bgColor","fluid","href","onClick","icon","Boolean","window","location","hostname","match","GridItem","project","src","imageLink","alt","altTag","name","due","cardText","GridLayout","childToParent","setTechData","technologies","github","demoLink","linkType","modalImageLink","filter","projects","techs","length","x","includes","map","index","ButtonGrid","buttonToggle","type","toggle","someFunction","technology","e","indexOf","selectToggle","Modal","setOpenModal","setProjectData","useEffect","document","body","style","overflow","id","Invoices","modalOpen","setModalOpen","setProject","tech","setTech","item","data","Resume","Tooltip","toolTipType","children","text","rest","show","setShow","onMouseEnter","onMouseLeave","TooltipRight","GithubRow","week","weekIndex","day","contributionCount","date","color","backgroundColor","GithubColumn","githubData","user","contributionsCollection","contributionCalendar","weeks","contributionDays","firstDay","GITHUB_DATA","gql","GithubData","useQuery","loading","error","title","totalContributions","Home","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","process","client","ApolloClient","link","concat","cache","InMemoryCache","ReactDOM","render","ApolloProvider","path","element","padding","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"0eAae,SAASA,IACtB,MAAkCC,oBAAS,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACMC,GAAc,IAAIC,MAAOC,cAE/B,OACE,gCACE,sBAAKC,UAAU,YAAf,UACE,cAAC,IAAD,CAAWC,OAAO,KAAKC,OAAK,EAACC,QAAQ,QAAQH,UAAU,YAAvD,SACE,eAAC,IAAD,CAAcI,OAAK,EAAnB,UACE,cAAC,IAAD,CAAgBC,KAAK,IAArB,kBACA,cAAC,IAAD,CAAgBA,KAAK,UAArB,oBACA,cAAC,IAAD,CAAgBA,KAAK,aAArB,uBAEA,cAAC,IAAD,CACE,gBAAc,yBACd,gBAAc,QACd,aAAW,oBACXC,QAAS,kBAAMV,GAAcD,IAJ/B,SAME,cAAC,IAAD,CAASY,KAAK,gBAIpB,cAAC,IAAD,OAEF,yBAAQP,UAAU,cAAlB,gCAAsDH,QC1BxCW,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,oBChBS,SAASC,EAAT,GAAgC,IAAZC,EAAW,EAAXA,QAC/B,OAEI,qCACI,qBAAKC,IAAKD,EAAQE,UAAWhB,UAAU,qBAAqBiB,IAAKH,EAAQI,SACzE,6BAAI,4BAAIJ,EAAQK,SAChB,4BAAIL,EAAQM,MACZ,4BAAIN,EAAQO,cCLT,SAASC,EAAT,GAAqD,IAA/BC,EAA8B,EAA9BA,cAAeC,EAAe,EAAfA,YA6EhD,OAEI,qBAAKxB,UAAU,QAAf,SA9EW,CACX,CACEmB,KAAM,mBACNM,aAAc,CACV,QACA,QACA,MACA,cAEJC,OAAQ,iDACRC,SAAU,mEACVC,SAAU,UACVZ,UAAW,gCACXE,OAAQ,gCACRG,SAAU,yCACVQ,eAAgB,iCAElB,CACEV,KAAM,gBACNM,aAAc,CACZ,QACA,QACA,MACA,cAEFC,OAAQ,8CACRC,SAAU,kDACVC,SAAU,SACVZ,UAAW,mCACXE,OAAQ,6BACRG,SAAU,iCACVQ,eAAgB,oCAWlB,CACEV,KAAM,gBACNM,aAAc,CACZ,QACA,QACA,MACA,cAEFC,OAAQ,sDACRC,SAAU,kDACVC,SAAU,SACVZ,UAAW,6BACXE,OAAQ,6BACRG,SAAU,uCACVQ,eAAgB,mCAElB,CACEV,KAAM,YACNM,aAAc,CACV,QACA,QACA,MACA,cAEJC,OAAQ,2DACRC,SAAU,4CACVC,SAAU,SACVZ,UAAW,uBACXE,OAAQ,yBACRG,SAAU,+BACVQ,eAAgB,yBAQbC,QAAO,SAACC,GACP,IAAIC,EAAQR,EACZ,OAAqB,IAAjBQ,EAAMC,QAIWF,EAASN,aAAaK,QAAO,SAAAI,GAAC,OAAIF,EAAMG,SAASD,MACpDD,SAAWD,EAAMC,UAQpCG,KAAI,SAACtB,EAASuB,GAAV,OACG,qBAAKrC,UAAU,OAAf,SACI,qBAAKA,UAAU,YAAYM,QAAS,WAChCiB,EAAcT,IADlB,SAGI,cAACD,EAAD,CAAUC,QAASA,OAJAuB,Q,YCjGhC,SAASC,EAAT,GAAqC,IAAhBC,EAAe,EAAfA,aAChC,EAAwC7C,mBAAS,CAAC,CAC9CyB,KAAM,QACNqB,KAAM,UACNC,OAAQ,IAEZ,CACItB,KAAM,QACNqB,KAAM,UACNC,OAAQ,IAEZ,CACItB,KAAM,MACNqB,KAAM,WACNC,OAAQ,IAEZ,CACItB,KAAM,aACNqB,KAAM,WACNC,OAAQ,IAEZ,CACItB,KAAM,OACNqB,KAAM,WACNC,OAAQ,IAEZ,CACItB,KAAM,aACNqB,KAAM,WACNC,OAAQ,IAEZ,CACItB,KAAM,SACNqB,KAAM,UACNC,OAAQ,IAEZ,CACItB,KAAM,UACNqB,KAAM,UACNC,OAAQ,IAEZ,CACItB,KAAM,aACNqB,KAAM,UACNC,OAAQ,IAEZ,CACItB,KAAM,aACNqB,KAAM,WACNC,OAAQ,MAhDZ,mBAAOhB,EAAP,UA8DA,SAASiB,EAAaC,IAVtB,SAAsBA,GAClB,IAAIN,EAAQZ,EAAaW,KAAI,SAASQ,GAAK,OAAOA,EAAEzB,QAAS0B,QAAQF,EAAWxB,MAC7C,KAA/BM,EAAaY,GAAOI,OACpBhB,EAAaY,GAAOI,OAAS,UAG7BhB,EAAaY,GAAOI,OAAS,GAKjCK,CAAaH,GACbJ,EAAaI,GAGjB,OAEI,qBAAK3C,UAAU,aAAf,SACKyB,EACAW,KAAI,SAACO,EAAYN,GAAb,OACG,8BACI,8BACI,wBAAQrC,UAAW2C,EAAWF,OAAQnC,QAAS,kBAAMoC,EAAaC,IAAlE,SAAgFA,EAAWxB,UAFzFkB,Q,MCvCfU,MAnCf,YAAkD,IAAjCC,EAAgC,EAAhCA,aAAcC,EAAkB,EAAlBA,eAO7B,OANAC,qBAAU,WAER,OADAC,SAASC,KAAKC,MAAMC,SAAW,SACxB,kBAAMH,SAASC,KAAKC,MAAMC,SAAW,WAC3C,IAID,8BACE,qBAAKtD,UAAU,kBAAf,SACE,sBAAKA,UAAU,iBAAf,UACE,qBAAKe,IAAKkC,EAAepB,eAAgB7B,UAAU,GAAGiB,IAAKgC,EAAe/B,SAC1E,qBAAKlB,UAAU,QAAf,SACE,6BAAKiD,EAAe9B,SAEtB,qBAAKnB,UAAU,OAAf,SACE,4BAAIiD,EAAe5B,aAErB,sBAAKrB,UAAU,SAAf,UACE,wBAAQuD,GAAG,YAAYjD,QAAS,WAAO0C,GAAa,IAApD,oBAGA,wBAAQ1C,QAAS,WAAOG,OAAOC,SAASL,KAAK4C,EAAetB,UAA5D,uBAGA,wBAAQrB,QAAS,WAAOG,OAAOC,SAASL,KAAK4C,EAAevB,QAA5D,oCCtBG,SAAS8B,IACtB,MAAkC9D,oBAAS,GAA3C,mBAAO+D,EAAP,KAAkBC,EAAlB,KACA,EAA8BhE,mBAAS,IAAvC,mBAAOoB,EAAP,KAAgB6C,EAAhB,KACA,EAAwBjE,mBAAS,IAAjC,mBAAOkE,EAAP,KAAaC,EAAb,KAgBA,OACE,gCACKJ,GAAa,cAAC,EAAD,CAAOT,aAAcU,EAAcT,eAAgBnC,IACjE,mBAAGd,UAAU,yBAAb,wLACA,cAAC,EAAD,CAAYuC,aAblB,SAAuBI,GACjBiB,EAAKf,QAAQF,EAAWxB,OAAS,EACjC0C,EAAQD,EAAK9B,QAAO,SAAAgC,GAAI,OAAIA,IAASnB,EAAWxB,SAGhD0C,GAAQ,SAACD,GAAD,4BAAcA,GAAd,CAAmBjB,EAAWxB,aAStC,cAACG,EAAD,CAAYC,cAnBI,SAACwC,GACrBJ,EAAWI,GACXL,GAAa,IAiBiClC,YAAaoC,O,MC3BhD,SAASI,IAEpB,OACI,sBAAKhE,UAAU,eAAf,UACI,sBAAKA,UAAU,iBAAf,UACI,iDAAmB,0BACnB,qDAAuB,0BACvB,mBAAGK,KAAK,+CAAR,SACI,qBAAKU,IAAI,wBAAwBf,UAAU,WAAWiB,IAAI,oBAE9D,mBAAGZ,KAAK,gCAAR,SACI,qBAAKU,IAAI,+BAA+Bf,UAAU,WAAWiB,IAAI,qBAMzE,sBAAKjB,UAAU,iBAAf,UACI,oBAAIA,UAAU,eAAd,wBACA,sBAAMA,UAAU,aAAhB,wCACA,oBAAIA,UAAU,WAAd,kGACA,sBAAMA,UAAU,aAAhB,oPACA,+BACI,uJACA,0FACA,4KAGJ,sBAAMA,UAAU,aAAhB,0CACA,oBAAIA,UAAU,WAAd,4DACA,sBAAMA,UAAU,aAAhB,gMACA,+BACI,kGACA,oNACA,8HACA,sRACA,mNACA,wMACA,gIACA,6EACA,yIAEJ,sBAAMA,UAAU,aAAhB,wCACA,oBAAIA,UAAU,WAAd,sEACA,+BACI,yFACA,sHAEJ,sBAAMA,UAAU,aAAhB,oCACA,oBAAIA,UAAU,WAAd,8DACA,sBAAMA,UAAU,aAAhB,kFACA,6BACI,iHAIR,sBAAKA,UAAU,iBAAf,UACI,oBAAIA,UAAU,eAAd,oBACA,2RAGJ,sBAAKA,UAAU,iBAAf,UACI,oBAAIA,UAAU,eAAd,uBACA,sBAAMA,UAAU,aAAhB,yCACA,oBAAIA,UAAU,WAAd,sFACA,sBAAMA,UAAU,aAAhB,4IACA,+BACI,gPACA,wMACA,0MACA,iNAGJ,sBAAMA,UAAU,aAAhB,oCACA,oBAAIA,UAAU,WAAd,4GAGJ,sBAAKA,UAAU,iBAAf,UACI,oBAAIA,UAAU,eAAd,0BACA,sBAAMA,UAAU,aAAhB,iCACA,8EACA,sBAAMA,UAAU,aAAhB,kN,8FC7DCiE,EApBD,SAAC,GAA6C,EAA3CC,YAA4C,IAA/BC,EAA8B,EAA9BA,SAAUC,EAAoB,EAApBA,KAASC,EAAW,iBAC1D,EAAwB3E,oBAAS,GAAjC,mBAAO4E,EAAP,KAAaC,EAAb,KAEA,OACE,sBAAKvE,UAAU,oBAAf,UACE,sBAAKA,UAAWsE,EAAO,sBAAwB,cAA/C,UACGF,EACD,sBAAMpE,UAAU,qBAElB,6CACEwE,aAAc,kBAAMD,GAAQ,IAC5BE,aAAc,kBAAMF,GAAQ,KACxBF,GAHN,aAKGF,S,oCCMMO,EApBI,SAAC,GAA6C,EAA3CR,YAA4C,IAA/BC,EAA8B,EAA9BA,SAAUC,EAAoB,EAApBA,KAASC,EAAW,iBAC/D,EAAwB3E,oBAAS,GAAjC,mBAAO4E,EAAP,KAAaC,EAAb,KAEA,OACE,sBAAKvE,UAAU,oBAAf,UACE,sBAAKA,UAAWsE,EAAO,4BAA8B,oBAArD,UACGF,EACD,sBAAMpE,UAAU,2BAElB,6CACEwE,aAAc,kBAAMD,GAAQ,IAC5BE,aAAc,kBAAMF,GAAQ,KACxBF,GAHN,aAKGF,SCZI,SAASQ,EAAT,GAAuC,IAAnBC,EAAkB,EAAlBA,KAC/B,OADiD,EAAZC,UACtB,GACJD,EAAKxC,KAAI,SAAC0C,GAAD,OAEZ,aADA,CACC,EAAD,CAASV,KAAI,UAAKU,EAAIC,kBAAT,6BAA+CD,EAAIE,MAAhE,SACI,qBAAoBhF,UAAS,0BAAqB8E,EAAIG,OAAS5B,MAAO,CAAC6B,gBAAgB,GAAD,OAAKJ,EAAIG,SAArFH,EAAIE,OAD2DF,EAAIE,SAOlFJ,EAAKxC,KAAI,SAAC0C,GAAD,OAEZ,aADA,CACC,EAAD,CAAcV,KAAI,UAAKU,EAAIC,kBAAT,6BAA+CD,EAAIE,MAArE,SACI,qBAAoBhF,UAAS,0BAAqB8E,EAAIG,OAAS5B,MAAO,CAAC6B,gBAAgB,GAAD,OAAKJ,EAAIG,SAArFH,EAAIE,OADgEF,EAAIE,SCyB/EG,I,EAAAA,EAnBf,YAAqC,IAAdC,EAAa,EAAbA,WAQrB,OACI,8BACKA,EAAWC,KAAKC,wBAAwBC,qBAAqBC,MAAMpD,KAAI,SAACwC,EAAMvC,GAAP,OACtE,qBAAKrC,UAAU,sBAAf,SACE,cAAC,EAAD,CAAW4E,KAAMA,EAAKa,iBAAkBZ,UAAWxC,KADXuC,EAAKc,gBC3BrDC,G,MAAcC,YAAH,gYAqBF,SAASC,IAEtB,MAAiCC,YAASH,GAAlCI,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,MAAOjC,EAAxB,EAAwBA,KAExB,OAAIgC,EAAgB,2CAChBC,EAAc,yCAGhB,sBAAKhG,UAAU,kBAAf,UACE,mBAAGK,KAAK,gCAAgCgD,MAAO,CAAC4B,MAAM,SAAUgB,MAAM,mCAAtE,SACE,+BAAI,qBAAKlF,IAAI,+BAA+Bf,UAAU,aAAaiB,IAAI,gBAAvE,4CAAyI8C,EAAKsB,KAAKC,wBAAwBC,qBAAqBW,mBAAhM,SAEA,cAAC,EAAD,CAAcd,WAAYrB,IAC1B,oBAAG/D,UAAU,WAAb,sDACE,mBAAGK,KAAK,gMAAR,8E,MCvCK,SAAS8F,IAEtB,OACE,sBAAKnG,UAAU,aAAf,UACI,sBAAKA,UAAU,iBAAf,UACE,qBAAKe,IAAI,kCAAkCf,UAAU,WAAWiB,IAAI,mBACpE,oBAAIjB,UAAU,cAAd,sBACA,mBAAGA,UAAU,eAAb,oYAMF,cAAC,EAAD,OCER,IAAMoG,EAAWC,YAAe,CAC9BC,IAAK,mCAGDC,EAAWC,aAAW,SAACC,EAAD,GAAqB,IAAfC,EAAc,EAAdA,QAChC,MAAO,CACLA,QAAQ,2BACHA,GADE,IAELC,cAAc,UAAD,OAAYC,kDAKzBC,EAAS,IAAIC,IAAa,CAC9BC,KAAMR,EAASS,OAAOZ,GACtBa,MAAO,IAAIC,MAGbC,IAASC,OACP,cAACC,EAAA,EAAD,CAAgBR,OAAQA,EAAxB,SACE,cAAC,IAAD,UAGI,cAAC,IAAD,UACE,eAAC,IAAD,CAAOS,KAAK,IAAIC,QAAS,cAAC,EAAD,IAAzB,UACE,cAAC,IAAD,CAAOlF,OAAK,EAACkF,QAAS,cAAC,EAAD,MAEtB,cAAC,IAAD,CAAOD,KAAK,SAASC,QAAS,cAAC,EAAD,MAC9B,cAAC,IAAD,CAAOD,KAAK,YAAYC,QAAS,cAAC,EAAD,MACjC,cAAC,IAAD,CACED,KAAK,IACLC,QACE,sBAAMlE,MAAO,CAAEmE,QAAS,QAAxB,SACE,mEAUhBrE,SAASsE,eAAe,SbqEpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAACC,GAClCA,EAAaC,kB","file":"static/js/main.88ed6ccf.chunk.js","sourcesContent":["import * as React from 'react';\nimport { Outlet } from 'react-router-dom';\nimport {\n  MDBContainer,\n  MDBNavbar,\n  MDBNavbarBrand,\n  MDBNavbarToggler,\n  MDBIcon,\n} from 'mdb-react-ui-kit';\nimport { useState } from 'react';\nimport './App.css';\n\n\nexport default function App() {\n  const [showBasic, setShowBasic] = useState(false);\n  const currentYear = new Date().getFullYear();\n\n  return (\n    <div>\n      <div className=\"page-wrap\">\n        <MDBNavbar expand='lg' light bgColor='light' className='fixed-top'>\n          <MDBContainer fluid>\n            <MDBNavbarBrand href='/'>Home</MDBNavbarBrand>\n            <MDBNavbarBrand href='/resume'>Resume</MDBNavbarBrand>\n            <MDBNavbarBrand href='/portfolio'>Portfolio</MDBNavbarBrand>\n            {/* <MDBNavbarBrand href='/interviews'>Interview Recordings</MDBNavbarBrand> */}\n            <MDBNavbarToggler\n              aria-controls='navbarSupportedContent'\n              aria-expanded='false'\n              aria-label='Toggle navigation'\n              onClick={() => setShowBasic(!showBasic)}\n            >\n              <MDBIcon icon='bars' />\n            </MDBNavbarToggler>\n          </MDBContainer>\n        </MDBNavbar>\n        <Outlet/>\n      </div>\n      <footer className=\"site-footer\">&#169; Peter Pierce, {currentYear}</footer>\n    </div>\n  );\n}\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import * as React from 'react';\n\nexport default function GridItem({ project }) {\n    return (\n\n        <>\n            <img src={project.imageLink} className=\"PortfolioCardImage\" alt={project.altTag}></img>\n            <h4><b>{project.name}</b></h4>\n            <p>{project.due}</p>\n            <p>{project.cardText}</p>\n        </>\n    );\n}\n\n","import React from 'react';\nimport './GridLayout';\nimport GridItem from '../GridItem/GridItem';\n\nexport default function GridLayout({ childToParent, setTechData }) {\n    let projects = [\n        {\n          name: \"I Have a Project\",\n          technologies: [\n              'React',\n              'Redux',\n              'SQL',\n              'Javascript',\n          ],\n          github: \"https://github.com/Ugh-GitHub/i-have-a-project\",\n          demoLink: \"https://www.youtube.com/watch?v=658-OlkiTCQ&ab_channel=MadTofu22\",\n          linkType: \"youtube\",\n          imageLink: \"/images/IHAP_Availability.png\",\n          altTag: \"I Have a Project Sample Image\",\n          cardText: \"Prime Academy group project for client\",\n          modalImageLink: \"/images/IHAP_Availability.png\",\n        },\n        {\n          name: \"Sign Designer\",\n          technologies: [\n            'React',\n            'Redux',\n            'SQL',\n            'Javascript',\n        ],\n          github: \"https://github.com/Ugh-GitHub/sign_designer\",\n          demoLink: \"https://agile-atoll-25766.herokuapp.com/#/login\",\n          linkType: \"heroku\",\n          imageLink: \"/images/SignDesigner_Cropped.png\",\n          altTag: \"Sign Designer Sample Image\",\n          cardText: \"Prime Academy capstone project\",\n          modalImageLink: \"/images/SignDesigner_Cropped.png\",\n        },\n        // {\n        //   name: \"Calculator\",\n        //   technologies: [\n        //     'React',\n        //     'Redux'\n        // ],\n        //   github: \"https://github.com/Ugh-GitHub/jquery-server-side-calculator\",\n        //   heroku: \"07/22/2003\"\n        // },\n        {\n          name: \"Feedback Loop\",\n          technologies: [\n            'React',\n            'Redux',\n            'SQL',\n            'Javascript',\n        ],\n          github: \"https://github.com/Ugh-GitHub/redux-feedback-looper\",\n          demoLink: \"https://secure-anchorage-94469.herokuapp.com/#/\",\n          linkType: \"heroku\",\n          imageLink: \"/images/FeedbackLooper.png\",\n          altTag: \"Feedback Loop Sample Image\",\n          cardText: \"Feedback Loop app developed at Prime\",\n          modalImageLink: \"/images/FeedbackLooper_Wide.png\",\n        },\n        {\n          name: \"To-Do App\",\n          technologies: [\n              'React',\n              'Redux',\n              'SQL',\n              'Javascript',\n          ],\n          github: \"https://github.com/Ugh-GitHub/The-Weekend-sql-to-do-list\",\n          demoLink: \"https://pure-chamber-61508.herokuapp.com/\",\n          linkType: \"heroku\",\n          imageLink: \"/images/ToDoList.png\",\n          altTag: \"To-Do App Sample Image\",\n          cardText: \"To-Do app developed at Prime\",\n          modalImageLink: \"/images/ToDoList.png\",\n        }\n      ];\n  \n    return (\n        \n        <div className=\"cards\">\n            {projects\n            .filter((projects) => {\n              let techs = setTechData;\n              if (techs.length === 0) {\n                 return true;\n              }\n              else {\n                let intersection = projects.technologies.filter(x => techs.includes(x));\n                if(intersection.length === techs.length) {\n                  return true;\n                }\n                else {\n                  return false;\n                }\n              }\n            })\n            .map((project, index) => (\n                    <div className=\"card\" key={index}>\n                        <div className=\"container\" onClick={() => {\n                            childToParent(project);\n                        }}>\n                            <GridItem project={project}/>\n                        </div>\n                    </div>\n            ))}\n        </div>\n\n    );\n}","import React, { useState } from 'react';\n// import TechButtons from '../TechButtons/TechButtons';\nimport './ButtonGrid.css';\n\nexport default function ButtonGrid({buttonToggle}) {\n    const [technologies, setTechnologies] = useState([{\n        name: 'React', \n        type: 'library',\n        toggle: ''\n    }, \n    {\n        name: 'Redux', \n        type: 'library',\n        toggle: ''\n    },\n    {\n        name: 'SQL',\n        type: 'language',\n        toggle: ''\n    },\n    {\n        name: 'Javascript',\n        type: 'language',\n        toggle: ''\n    },\n    {\n        name: 'HTML',\n        type: 'language',\n        toggle: ''\n    },\n    {\n        name: 'Typescript',\n        type: 'language',\n        toggle: ''\n    },\n    {\n        name: 'jQuery',\n        type: 'library',\n        toggle: ''\n    },\n    {\n        name: 'Node.js',\n        type: 'library',\n        toggle: ''\n    },\n    {\n        name: 'Express.js',\n        type: 'library',\n        toggle: ''\n    },\n    {\n        name: 'PostgreSQL',\n        type: 'database',\n        toggle: ''\n    },\n]);\n\n    function selectToggle(technology) {\n        var index = technologies.map(function(e) { return e.name; }).indexOf(technology.name);\n        if (technologies[index].toggle === '') {\n            technologies[index].toggle = 'toggled';\n        }\n        else {\n            technologies[index].toggle = '';\n        }\n    }\n    \n    function someFunction(technology) {\n        selectToggle(technology);\n        buttonToggle(technology);\n    }\n\n    return (\n\n        <div className=\"buttonGrid\">\n            {technologies\n            .map((technology, index) => (\n                    <div key={index}>\n                        <div>\n                            <button className={technology.toggle} onClick={() => someFunction(technology)}>{technology.name}</button>\n                        </div>\n                    </div>\n            ))}\n        </div>\n\n    );\n}","import React, { useEffect } from \"react\";\nimport \"./Modal.css\";\n\nfunction Modal({ setOpenModal, setProjectData }) {\n  useEffect(() => {\n    document.body.style.overflow = 'hidden';\n    return () => document.body.style.overflow = 'unset';\n  }, [])\n\n\n  return (\n    <div>\n      <div className=\"modalBackground\">\n        <div className=\"modalContainer\">\n          <img src={setProjectData.modalImageLink} className=\"\" alt={setProjectData.altTag}></img>\n          <div className=\"title\">\n            <h1>{setProjectData.name}</h1>\n          </div>\n          <div className=\"body\">\n            <p>{setProjectData.cardText}</p>\n          </div>\n          <div className=\"footer\">\n            <button id=\"cancelBtn\" onClick={() => {setOpenModal(false);}}>\n              Cancel\n            </button>\n            <button onClick={() => {window.location.href=setProjectData.demoLink}}>\n              Demo Site\n            </button>\n            <button onClick={() => {window.location.href=setProjectData.github}}>\n              Github Repo\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Modal;","import React, { useState } from 'react';\nimport GridLayout from '../GridLayout/GridLayout';\nimport './Portfolio.css';\nimport ButtonGrid from '../ButtonGrid/ButtonGrid';\nimport Modal from '../Modal/Modal';\n\nexport default function Invoices() {\n  const [modalOpen, setModalOpen] = useState(false);\n  const [project, setProject] = useState('');\n  const [tech, setTech] = useState([]);\n\n  const childToParent = (data) => {\n    setProject(data);\n    setModalOpen(true);\n  }\n\n  function buttonToggle( technology ) {\n    if (tech.indexOf(technology.name) > -1 ) {\n        setTech(tech.filter(item => item !== technology.name));\n    }\n    else {\n        setTech((tech) => [...tech,technology.name]);\n    } \n  }\n\n  return (\n    <div>\n        {modalOpen && <Modal setOpenModal={setModalOpen} setProjectData={project}/>}\n        <p className='buttonGridInstructions'>A small selection of my previous work. If you're looking for projects that utilize specific technologies, you can select the buttons below to filter for related projects.</p>       \n        <ButtonGrid buttonToggle={buttonToggle}/>\n        <GridLayout childToParent={childToParent} setTechData={tech}/>\n    </div>\n  );\n}\n","import * as React from 'react';\nimport './Resume.css';\n\nexport default function Resume() {\n  \n    return (\n        <div className=\"resumeFormat\">\n            <div className=\"sectionDivides\">\n                <span>Peter Pierce <br/></span>\n                <span>(952) 491 - 0151 <br/></span>\n                <a href=\"https://www.linkedin.com/in/peter-p-2b757737\">\n                    <img src=\"/images/LI-In-Bug.png\" className=\"logoIcon\" alt=\"Linkedin Logo\"></img>\n                </a>\n                <a href=\"https://github.com/Ugh-GitHub\">\n                    <img src=\"/images/GitHub-Mark-64px.png\" className=\"logoIcon\" alt=\"GitHub Logo\"></img>\n                </a>\n            </div>\n            \n            \n            \n            <div className=\"sectionDivides\">\n                <h1 className=\"resumeHeader\">Experience</h1>\n                <span className=\"resumeDate\">February 2021 - April 2021</span>\n                <h2 className=\"expTitle\">Westwood Professional Services, Minnetonka, MN - Contract Technical Business Analyst</h2>\n                <span className=\"jobSummary\">Westwood is a multi-disciplined national surveying and engineering services provider for commercial and residential development, public infrastructure, wind energy, solar energy, energy storage, and electric transmission projects.</span>\n                <ul>\n                    <li>Assisted in implementation of Contract Management System and developing a training tool/process flow diagram for UAT.</li>\n                    <li>Drove delivery of Learning Management System mobile app.</li>\n                    <li>Translated the user requirements to system requirements and assisted in the vendor selection process for the Applicant Tracking System.</li>\n                </ul>\n                \n                <span className=\"resumeDate\">January 2015 - December 2020</span>\n                <h2 className=\"expTitle\">Lyle Signs, Eden Prairie, MN - Account Manager</h2>\n                <span className=\"jobSummary\">Lyle Signs was a 8-figure revenue 100+ year old company and one of the industry leaders of signage and labelling solutions in the parking, traffic, and industrial safety markets.</span>\n                <ul>\n                    <li>Grew the Amazon account from the $1,000’s to $4 million/yr.</li>\n                    <li>Grew the W.W. Grainger account from under $1 million/yr. (2013) to nearly $4 million/yr while increasing profitability, acquiring market share and eliminating a major competitor.</li>\n                    <li>Created the company’s first digital product catalog from nothing to nearly 30,000 SKUs.</li>\n                    <li>Designed and implemented process improvements that automated the company’s new product creation process, bringing competitive parity to our safety sign catalog and reducing required hours for over 16,000 SKUs down from &gt;4,500 to under 300.</li>\n                    <li>Developed and coordinated implementation of new packaging for the decal product line without increasing scrap rate, eliminating labelling requirements and saving time and money.</li>\n                    <li>Coordinated on-site and off-site with Amazon & W. W. Grainger accounts for marketing, negotiations, SaaS development, and to resolve logistics and operational issues.</li>\n                    <li>Manage product catalog uploads, keywords, & metadata for Amazon.com & W. W. Grainger accounts.</li>\n                    <li>Develop products and new product proposals.</li>\n                    <li>Managed marketing, PPC, keyword research, and Amazon advertising console/AMS of Amazon.com business.</li>\n                </ul>\n                <span className=\"resumeDate\">April 2013 - December 2014</span>\n                <h2 className=\"expTitle\">Lyle Signs, Eden Prairie, MN - Assistant Account Manager</h2>\n                <ul>\n                    <li>Trained in on company production systems and operations</li>\n                    <li>Assisted in sales operations, catalog setups, and created presentation materials.</li>\n                </ul>\n                <span className=\"resumeDate\">July 2012 - March 2013</span>\n                <h2 className=\"expTitle\">RAW Logistics, Edina, MN - Logistics Coordinator</h2>\n                <span className=\"jobSummary\">Operated a phone desk and freight tracking system for 50 hours/week.</span>\n                <ul>\n                    <li>Negotiated, brokered, and coordinated shipments with asset-based carriers.</li>\n                </ul>\n            </div>\n            \n            <div className=\"sectionDivides\">\n                <h1 className=\"resumeHeader\">Skills</h1>\n                <span>PERN (PostgreSQL, Express, React, and Node.js) Stack, React Native, GitHub, Javascript, SQL, HTML, Python, Axios, Ajax, Agile, Scrum, Microsoft Excel (Power User), Azure DevOps, Atlassian Trello, Xcode, Amazon Vendor Ecosystem (SEO, PPC, etc.).</span>\n            </div>\n\n            <div className=\"sectionDivides\">\n                <h1 className=\"resumeHeader\">Education</h1>\n                <span className=\"resumeDate\">October 2020 - January 2021</span>\n                <h2 className=\"expTitle\">PRIME Digital Academy, Minneapolis, MN - Full Stack Software Engineering</h2>\n                <span className=\"jobSummary\">20-week remote intensive program learning the essentials of web app development and the Agile software development life cycle.</span>\n                <ul>\n                    <li>Developed a labor/project management SaaS as a client project, bringing project management & software development best practices and technical expertise to drive scoping, development & overall productivity.</li>\n                    <li>Developed a working concept model of a database-orientated custom artwork design engine for Lyle Signs as part of a pitch to improve on existing pre-press operations.</li>\n                    <li>Methodologies introduced and utilized: Agile software development cycle, scoping, database architecture and design, testing, debugging, and software project management.</li>\n                    <li>Technologies worked with: SQL | HTML | CSS | Jquery | Javascript | Python | React | Redux | Passport | Express | PostgreSQL | Node.js | SQL | Git/GitHub | Postico | Postman</li>\n                </ul>\n                \n                <span className=\"resumeDate\">August 2008 - May 2012</span>\n                <h2 className=\"expTitle\">Colgate University, Hamilton, NY - Bachelor of Arts Double Major in Economics and Geography</h2>\n            </div>\n            \n            <div className=\"sectionDivides\">\n                <h1 className=\"resumeHeader\">Volunteering</h1>\n                <span className=\"resumeDate\">June 2021 - Present</span>\n                <h2>Open Arms of MN - Kitchen & Bakery Volunteer</h2>\n                <span className=\"jobSummary\">Volunteering 1.5-2 hours per day weekly (and sometimes Saturday). Open Arms of MN strives to provide medically tailored meals for people experiencing a significant illness or health crisis. </span>\n            </div>\n        </div>\n    );\n}\n\n","import React, { useState } from 'react';\nimport './ToolTip.css';\n\nconst Tooltip = ({ toolTipType, children, text, ...rest }) => {\n    const [show, setShow] = useState(false);\n  \n    return (\n      <div className=\"tooltip-container\">\n        <div className={show ? 'tooltip-box visible' : 'tooltip-box'}>\n          {text}\n          <span className=\"tooltip-arrow\" />\n        </div>\n        <div\n          onMouseEnter={() => setShow(true)}\n          onMouseLeave={() => setShow(false)}\n          {...rest}\n        >\n          {children}\n        </div>\n      </div>\n    );\n  };\n\n  export default Tooltip;","import React, { useState } from 'react';\nimport './ToolTip.css';\n\nconst TooltipRight = ({ toolTipType, children, text, ...rest }) => {\n    const [show, setShow] = useState(false);\n  \n    return (\n      <div className=\"tooltip-container\">\n        <div className={show ? 'tooltip-right-box visible' : 'tooltip-right-box'}>\n          {text}\n          <span className=\"tooltip-arrow-right\" />\n        </div>\n        <div\n          onMouseEnter={() => setShow(true)}\n          onMouseLeave={() => setShow(false)}\n          {...rest}\n        >\n          {children}\n        </div>\n      </div>\n    );\n  };\n\n  export default TooltipRight;","import * as React from 'react';\nimport './GithubRow.css';\nimport Tooltip from '../ToolTip/ToolTip';\nimport TooltipRight from '../ToolTip/ToolTipRight';\n\nexport default function GithubRow({week, weekIndex}) {\n    if(weekIndex < 25) {\n        return week.map((day) => (\n            // insert conditional rendering for Tooltip based on what the weekIndex is (i.e. if weekIndex is <25, skews to the left)\n            <Tooltip text={`${day.contributionCount} contributions on ${day.date}`} key={day.date}>\n                <div key={day.date} className={`contributionBox ${day.color}`} style={{backgroundColor: `${day.color}`}}>\n                </div>\n            </Tooltip>\n            \n        ));\n    }\n    return week.map((day) => (\n        // insert conditional rendering for Tooltip based on what the weekIndex is (i.e. if weekIndex is <25, skews to the left)\n        <TooltipRight text={`${day.contributionCount} contributions on ${day.date}`} key={day.date}>\n            <div key={day.date} className={`contributionBox ${day.color}`} style={{backgroundColor: `${day.color}`}}>\n            </div>\n        </TooltipRight>\n    ));\n}","import './GithubColumn.css';\nimport GithubRow from '../GithubRow/GithubRow';\n\n// const GITHUB_DATA = gql`query {\n//   user(login: \"ugh-github\") {\n//     name\n//     contributionsCollection {\n//       contributionCalendar {\n//         colors\n//         totalContributions\n//         weeks {\n//           contributionDays {\n//             color\n//             contributionCount\n//             date\n//             weekday\n//           }\n//           firstDay\n//         }\n//       }\n//     }\n//   }\n// }`;\n\nfunction GithubColumn({githubData}) {\n\n  // const { loading, error, data } = useQuery(GITHUB_DATA);\n\n  // if (loading) return <p>Loading...</p>;\n  // if (error) return <p>Error :(</p>;\n\n\n  return (\n      <div>\n          {githubData.user.contributionsCollection.contributionCalendar.weeks.map((week, index) => (\n            <div className=\"contributionsColumn\" key={week.firstDay}>\n              <GithubRow week={week.contributionDays} weekIndex={index}/>\n            </div>))\n          }\n      </div>\n  );\n}\n\nexport default GithubColumn;","import {\n  useQuery,\n  gql\n} from \"@apollo/client\";\nimport React from 'react';\nimport GithubColumn from '../GithubColumn/GithubColumn';\nimport './GithubData.css';\n\nconst GITHUB_DATA = gql`query {\n  user(login: \"ugh-github\") {\n    name\n    contributionsCollection {\n      contributionCalendar {\n        colors\n        totalContributions\n        weeks {\n          contributionDays {\n            color\n            contributionCount\n            date\n            weekday\n          }\n          firstDay\n        }\n      }\n    }\n  }\n}`;\n\nexport default function GithubData() {\n  \n  const { loading, error, data } = useQuery(GITHUB_DATA);\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error :(</p>;\n\n  return (\n    <div className='githubComponent'>\n      <a href=\"https://github.com/Ugh-GitHub\" style={{color:'black'}} title=\"Click to visit my Github Profile\">\n        <h3><img src=\"/images/GitHub-Mark-64px.png\" className=\"githubIcon\" alt=\"GitHub Logo\"></img>&nbsp;&nbsp;Github Contributions (YTD Total: {data.user.contributionsCollection.contributionCalendar.totalContributions})</h3>\n      </a>\n        <GithubColumn githubData={data}/>\n        <p className=\"footnote\">Hover for specfic commit information.&nbsp;\n          <a href=\"https://docs.github.com/en/account-and-profile/setting-up-and-managing-your-github-profile/managing-contribution-graphs-on-your-profile/why-are-my-contributions-not-showing-up-on-my-profile\">\n             Learn more about how contributions are counted for Github.\n          </a>\n        </p>\n    </div>\n  );\n}","import * as React from 'react';\nimport GithubData from '../GithubData/GithubData';\nimport './Home.css';\n\nexport default function Home() {\n\n  return (\n    <div className=\"homeFormat\">\n        <div className=\"sectionDivides\">\n          <img src=\"/images/WordPress_Headshot.jpeg\" className=\"headshot\" alt=\"Peter Headshot\"></img>\n          <h1 className=\"aboutHeader\">Welcome!</h1>\n          <p className=\"aboutSummary\">\n            Accomplished Account Manager with over 6 years experience in managing and solutioning for two $3-5 million accounts. \n            Currently pivoting into a software engineering role where I can leverage my aptitude for learning, problem solving and communication. \n            You can currently find me learning Typescript and AWS, building a React Native app, improvising on stage, or bouldering.\n          </p>\n        </div>\n        <GithubData/>\n    </div>\n  );\n}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'mdb-react-ui-kit/dist/css/mdb.min.css';\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  createHttpLink,\n} from \"@apollo/client\";\nimport { setContext } from '@apollo/client/link/context';\nimport './index.css';\nimport App from './Components/App/App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router, Routes, Route  } from 'react-router-dom'; \nimport Portfolio from './Components/Portfolio/Portfolio';\nimport Resume from './Components/Resume/Resume';\nimport Home from './Components/Home/Home';\n\n\nconst httpLink = createHttpLink({\n  uri: 'https://api.github.com/graphql',\n});\n\nconst authLink = setContext((_, { headers }) => {\n  return {\n    headers: {\n      ...headers,\n      authorization: `Bearer ${process.env.REACT_APP_GITHUB_CONTRIBUTIONS_READ_TOKEN}`,\n    }\n  }\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache()\n});\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <Router>\n      {/* <React.StrictMode>\n        <Provider store={store}> */}\n        <Routes>\n          <Route path=\"/\" element={<App />}>\n            <Route index element={<Home />}/>\n            {/* <Route path=\"interviews\" element={<Test />}/> */}\n            <Route path=\"resume\" element={<Resume />} />\n            <Route path=\"portfolio\" element={<Portfolio />} />\n            <Route\n              path=\"*\"\n              element={\n                <main style={{ padding: '1rem' }}>\n                  <p>There's nothing here!</p>\n                </main>\n              }\n            />\n          </Route>\n      </Routes>\n        {/* </Provider>\n      </React.StrictMode> */}\n    </Router>\n  </ApolloProvider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}